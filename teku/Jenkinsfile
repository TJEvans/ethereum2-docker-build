pipeline {
    agent any
    stages {        
        stage('Build') {
            // Build image, output is stereum/${IMAGE}:${RELEASE}-build
            steps {
                checkout scm
                dir("${IMAGE}") {
                    sh 'docker build -f Dockerfile --build-arg=BEACON_BASE=${BASE} --build-arg=RELEASE=${RELEASE} -t stereum/${IMAGE}:${RELEASE}-build .'
                }
            }
        }
        stage('Shrink') {
            // Shrink image using docker-slim, output is stereum/${IMAGE}:${RELEASE}-slim 
            steps {                                    
                sh "/var/jenkins_home/docker-slim/docker-slim.sh stereum/${IMAGE}:${RELEASE}"
                sh "docker rmi -f stereum/${IMAGE}:${RELEASE}-build"
            }
            
        }
        stage('Scan') {
            // Scan the shrinked image and put the scan report in the final image named stereum/$IMAGE:$TAG-soft
            steps {
                dir("${IMAGE}") {   
                    sh "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v /var/jenkins_home/.trivy:/root/.cache/ aquasec/trivy -o $PWD/scan_report.log --exit-code 0 --severity CRITICAL,HIGH,LOW --no-progress stereum/${IMAGE}:${RELEASE}-slim"
                    sh "docker build --build-arg=IMAGE=stereum/${IMAGE}:${RELEASE}-slim -f /var/jenkins_home/docker-slim/scanreport.yaml -t stereum/${IMAGE}:${RELEASE}-soft ."
                    sh "docker rmi -f stereum/${IMAGE}:${RELEASE}-slim"
                }
            }   
        }
        stage('Push Soft') {            
            // push the soft image to dockerhub
            steps {                
                sh 'docker push stereum/${IMAGE}:${RELEASE}-soft'                                   
            }
        }
        stage('Push Secured Image') {            
            // do a breaking rescan, push the image only if we are free of critical issues
            steps {          
                script {
                    def RESULT = sh returnStatus: true, script: "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v /var/jenkins_home/.trivy:/root/.cache/ aquasec/trivy -o scan_report.log --exit-code 8 --severity CRITICAL --no-progress stereum/${IMAGE}:${RELEASE}-slim"
                    if ( RESULT != 0 ) {
                        unstable("There are CVEs marked as critical, skip pushing hard image")
                    } else {
                        sh 'docker tag stereum/${IMAGE}:${RELEASE}-soft stereum/${IMAGE}:${RELEASE}'                                       
                        sh 'docker push stereum/${IMAGE}:${RELEASE}'                                       
                        sh "docker rmi -f stereum/${IMAGE}:${RELEASE}"
                        sh "docker rmi -f stereum/${IMAGE}:${RELEASE}-soft"
                    }
                }
            }
        }
    }
    post { 
        always { 
            cleanWs()
        }
    }
}
